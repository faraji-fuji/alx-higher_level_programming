``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

``matrix_divided()`` divides all elements of a matrix.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests

Division by 0
    >>> matrix_divided([[2, 4], [2, 5]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

matrix not containing a list
    >>> matrix_divided([10], 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

correct output
    >>> matrix_divided([[20], [10]], 2)
    [[10.0], [5.0]]

incorrect type
    >>> matrix_divided([["Hello"], [5]], 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

List of matrix of diff length
    >>> matrix_divided([[10], [20, 20]], 5)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

divider is string
    >>> matrix_divided([[10], [20, 20]], "hello")
    Traceback (most recent call last):
    TypeError: div must be a number

divider is float
    >>> matrix_divided([[10], [20, 20]], 0.0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Missing one argument
    >>> matrix_divided([1,2])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Missing two arguments
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

divider is float
    >>> matrix_divided([[10, 30], [20, 20]], 0.5)
    [[20.0, 60.0], [40.0, 40.0]]
